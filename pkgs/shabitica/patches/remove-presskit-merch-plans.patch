Author: aszlig <aszlig@nix.build>
Date:   Sat Mar 31 02:10:24 2018 +0200

    Get rid of press kit, merch and group plans
    
    Those links are not relevant for the standalone version and are
    advertising anyway, so let's remove them.
    
    Signed-off-by: aszlig <aszlig@nix.build>
    Filename: remove-presskit-merch-plans.patch

diff --git a/website/client/components/static/header.vue b/website/client/components/static/header.vue
index fefaa20896..7a865e176a 100644
--- a/website/client/components/static/header.vue
+++ b/website/client/components/static/header.vue
@@ -5,25 +5,13 @@
         .logo.svg-icon(v-html='icons.purpleLogo', v-if='this.$route.name === "plans"')
         .logo.svg-icon(v-html='icons.logo', v-else)
     .collapse.navbar-collapse
-      ul.navbar-nav.mr-auto(v-if='$route.name !== "home"')
+      ul.navbar-nav.mr-auto
         router-link.nav-item(tag='li', to='/static/features')
           a.nav-link(v-once) {{ $t('companyAbout') }}
-        router-link.nav-item(tag='li', to='/static/plans')
-          a.nav-link(v-once) {{ $t('groupPlans') }}
-        li.nav-item
-          a.nav-link(href='https://habitica.wordpress.com/', target='_blank') {{ $t('companyBlog') }}
-        li.nav-item
-          a.nav-link(href='http://blog.habitrpg.com/', target='_blank') {{ $t('tumblr') }}
-        router-link.nav-item(tag='li', to='/static/press-kit')
-          a.nav-link(v-once) {{ $t('presskit') }}
-      ul.navbar-nav.mr-auto(v-else)
-        router-link.nav-item(tag='li', to='/register')
-          a.nav-link(v-once) {{ $t('getStarted') }}
-        li.nav-item.dropdown
-          a.nav-link.dropdown-toggle(v-once) {{ $t('learnMore') }}
-          .dropdown-menu
-            router-link.dropdown-item(to='/static/faq') {{ $t('faq') }}
-            router-link.dropdown-item(to='/static/plans') {{ $t('groupPlans') }}
+        router-link.nav-item(tag='li', to='/static/faq')
+          a.nav-link(v-once) {{ $t('faq') }}
+        router-link.nav-item(tag='li', to='/static/overview')
+          a.nav-link(v-once) {{ $t('overview') }}
       button.btn.btn-primary.pull-right(@click='playButtonClick()', v-if='$route.name !== "home"') {{ $t('playButtonFull') }}
     router-link.btn.btn-primary.login-button.pull-right(to='/login', v-if='$route.name === "home"') {{ $t('login') }}
 </template>
@@ -88,66 +76,10 @@
     }
   }
 
-  // Make the dropdown menu open on hover
-  .dropdown:hover .dropdown-menu {
-    display: block;
-    margin-top: 0; // remove the gap so it doesn't close
-  }
-
-  .dropdown + .dropdown {
-    margin-left: 0px;
-  }
-
-  .dropdown-separated {
-    border-bottom: 1px solid $gray-500;
-  }
-
-  .dropdown-menu:not(.user-dropdown) {
-    border-radius: 0px;
-    border: none;
-    box-shadow: none;
-    padding: 0px;
-    border-bottom-right-radius: 5px;
-    border-bottom-left-radius: 5px;
-
-    .dropdown-item {
-      font-size: 12px;
-      padding-top: .5em !important;
-      box-shadow: none;
-      border: none;
-      text-align: center;
-      color: #4f2a93 !important;
-
-      &.active {
-        background: $purple-300;
-      }
-
-      &:hover {
-        background-color: #9a62ff !important;
-        color: $white !important;
-
-        &:last-child {
-          border-bottom-right-radius: 5px;
-          border-bottom-left-radius: 5px;
-        }
-      }
-    }
-  }
-
   .home-header {
     .nav-item:hover .nav-link {
       background: transparent;
     }
-
-    .dropdown-menu {
-      border-radius: 4px;
-      padding-top: .5em;
-      padding-bottom: .5em;
-
-      .dropdown-item {
-        border-radius: 0px !important;
-      }
-    }
   }
 </style>
 
diff --git a/website/client/router/index.js b/website/client/router/index.js
index 246d9214f0..6f072043d8 100644
--- a/website/client/router/index.js
+++ b/website/client/router/index.js
@@ -12,11 +12,8 @@ const AppPage = () => import(/* webpackChunkName: "static" */'client/components/
 const ClearBrowserDataPage = () => import(/* webpackChunkName: "static" */'client/components/static/clearBrowserData');
 const FAQPage = () => import(/* webpackChunkName: "static" */'client/components/static/faq');
 const FeaturesPage = () => import(/* webpackChunkName: "static" */'client/components/static/features');
-const GroupPlansPage = () => import(/* webpackChunkName: "static" */'client/components/static/groupPlans');
-const MerchPage = () => import(/* webpackChunkName: "static" */'client/components/static/merch');
 const NewsPage = () => import(/* webpackChunkName: "static" */'client/components/static/newStuff');
 const OverviewPage = () => import(/* webpackChunkName: "static" */'client/components/static/overview');
-const PressKitPage = () => import(/* webpackChunkName: "static" */'client/components/static/pressKit');
 const PrivacyPage = () => import(/* webpackChunkName: "static" */'client/components/static/privacy');
 const TermsPage = () => import(/* webpackChunkName: "static" */'client/components/static/terms');
 
@@ -252,14 +249,10 @@ const router = new VueRouter({
         { name: 'clearBrowserData', path: 'clear-browser-data', component: ClearBrowserDataPage, meta: {requiresLogin: false}},
         { name: 'faq', path: 'faq', component: FAQPage, meta: {requiresLogin: false}},
         { name: 'features', path: 'features', component: FeaturesPage, meta: {requiresLogin: false}},
-        { name: 'groupPlans', path: 'group-plans', component: GroupPlansPage, meta: {requiresLogin: false}},
         { name: 'home', path: 'home', component: HomePage, meta: {requiresLogin: false} },
         { name: 'front', path: 'front', component: HomePage, meta: {requiresLogin: false} },
-        { name: 'merch', path: 'merch', component: MerchPage, meta: {requiresLogin: false}},
         { name: 'news', path: 'new-stuff', component: NewsPage, meta: {requiresLogin: false}},
         { name: 'overview', path: 'overview', component: OverviewPage, meta: {requiresLogin: false}},
-        { name: 'plans', path: 'plans', component: GroupPlansPage, meta: {requiresLogin: false}},
-        { name: 'pressKit', path: 'press-kit', component: PressKitPage, meta: {requiresLogin: false}},
         { name: 'privacy', path: 'privacy', component: PrivacyPage, meta: {requiresLogin: false}},
         { name: 'terms', path: 'terms', component: TermsPage, meta: {requiresLogin: false}},
         { name: 'notFound', path: 'not-found', component: NotFoundPage, meta: {requiresLogin: false} },
