Author: aszlig <aszlig@nix.build>
Date:   Tue Mar 27 05:37:16 2018 +0200

    Support email notifications using a mailer daemon
    
    The official Habitica setup uses MailChimp to send out emails and it's
    doing so by talking to their API, giving only a few template variables.
    
    However, the real mail templates are hosted within their MailChimp
    account, so we don't have access to the templates.
    
    Instead of sending those mails via HTTPS to the MailChimp API, we now
    have a daemon, which more or less replicates the API. This daemon works
    using UNIX domain sockets, so all we need to do is to use the "unix" URL
    scheme for got.post().
    
    Signed-off-by: aszlig <aszlig@nix.build>
    Filename: mailer-daemon.patch

diff --git a/config.json.example b/config.json.example
index e13607e0ee..cb82930b49 100644
--- a/config.json.example
+++ b/config.json.example
@@ -7,13 +7,11 @@
   "EMAILS_COMMUNITY_MANAGER_EMAIL": "admin@habitica.com",
   "EMAILS_PRESS_ENQUIRY_EMAIL": "admin@habitica.com",
   "EMAILS_TECH_ASSISTANCE_EMAIL": "admin@habitica.com",
-  "EMAIL_SERVER_AUTH_PASSWORD": "password",
-  "EMAIL_SERVER_AUTH_USER": "user",
-  "EMAIL_SERVER_URL": "http://example.com",
   "ENABLE_CONSOLE_LOGS_IN_PROD": "false",
   "ENABLE_CONSOLE_LOGS_IN_TEST": "false",
   "FLAG_REPORT_EMAIL": "email@example.com, email2@example.com",
   "IGNORE_REDIRECT": "true",
+  "MAILER_SOCKET": "/run/habitica/mailer.sock",
   "MAINTENANCE_MODE": "false",
   "NODE_DB_URI": "mongodb://localhost/habitrpg",
   "NODE_ENV": "development",
@@ -22,9 +20,6 @@
   "SESSION_SECRET": "YOUR SECRET HERE",
   "SESSION_SECRET_IV": "12345678912345678912345678912345",
   "SESSION_SECRET_KEY": "1234567891234567891234567891234567891234567891234567891234567891",
-  "SITE_HTTP_AUTH_ENABLED": "false",
-  "SITE_HTTP_AUTH_PASSWORDS": "password,wordpass,passkey",
-  "SITE_HTTP_AUTH_USERNAMES": "admin,tester,contributor",
   "TEST_DB_URI": "mongodb://localhost/habitrpg_test",
   "WEB_CONCURRENCY": 1,
   "SKIP_SSL_CHECK_KEY": "key",
diff --git a/test/api/unit/libs/email.test.js b/test/api/unit/libs/email.test.js
index 93cffd8693..6d17a0c0dd 100644
--- a/test/api/unit/libs/email.test.js
+++ b/test/api/unit/libs/email.test.js
@@ -104,7 +104,7 @@ describe('emails', () => {
       };
 
       sendTxnEmail(mailingInfo, emailType);
-      expect(got.post).to.be.calledWith('undefined/job', sinon.match({
+      expect(got.post).to.be.calledWith('unix:undefined:/job', sinon.match({
         json: true,
         body: {
           data: {
@@ -139,7 +139,7 @@ describe('emails', () => {
       let mailingInfo = getUser();
 
       sendTxnEmail(mailingInfo, emailType);
-      expect(got.post).to.be.calledWith('undefined/job', sinon.match({
+      expect(got.post).to.be.calledWith('unix:undefined:/job', sinon.match({
         json: true,
         body: {
           data: {
@@ -162,7 +162,7 @@ describe('emails', () => {
       let variables = [1, 2, 3];
 
       sendTxnEmail(mailingInfo, emailType, variables);
-      expect(got.post).to.be.calledWith('undefined/job', sinon.match({
+      expect(got.post).to.be.calledWith('unix:undefined:/job', sinon.match({
         json: true,
         body: {
           data: {
diff --git a/website/server/libs/email.js b/website/server/libs/email.js
index b37c3e8a0a..a2f4adf0c9 100644
--- a/website/server/libs/email.js
+++ b/website/server/libs/email.js
@@ -5,13 +5,7 @@ import got from 'got';
 import logger from './logger';
 
 const IS_PROD = nconf.get('IS_PROD');
-const EMAIL_SERVER = {
-  url: nconf.get('EMAIL_SERVER_URL'),
-  auth: {
-    user: nconf.get('EMAIL_SERVER_AUTH_USER'),
-    password: nconf.get('EMAIL_SERVER_AUTH_PASSWORD'),
-  },
-};
+const MAILER_SOCKET = nconf.get('MAILER_SOCKET');
 const BASE_URL = nconf.get('BASE_URL');
 
 export function getUserInfo (user, fields = []) {
@@ -120,8 +114,7 @@ export function sendTxn (mailingInfoArray, emailType, variables, personalVariabl
   }
 
   if (IS_PROD && mailingInfoArray.length > 0) {
-    got.post(`${EMAIL_SERVER.url}/job`, {
-      auth: `${EMAIL_SERVER.auth.user}:${EMAIL_SERVER.auth.password}`,
+    got.post(`unix:${MAILER_SOCKET}:/job`, {
       json: true,
       body: {
         type: 'email',
